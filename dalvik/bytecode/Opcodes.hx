package dalvik.bytecode;

import java.StdTypes;
extern interface Opcodes 
{
	static public var OP_NOP:Int;
	static public var OP_MOVE:Int;
	static public var OP_MOVE_FROM16:Int;
	static public var OP_MOVE_16:Int;
	static public var OP_MOVE_WIDE:Int;
	static public var OP_MOVE_WIDE_FROM16:Int;
	static public var OP_MOVE_WIDE_16:Int;
	static public var OP_MOVE_OBJECT:Int;
	static public var OP_MOVE_OBJECT_FROM16:Int;
	static public var OP_MOVE_OBJECT_16:Int;
	static public var OP_MOVE_RESULT:Int;
	static public var OP_MOVE_RESULT_WIDE:Int;
	static public var OP_MOVE_RESULT_OBJECT:Int;
	static public var OP_MOVE_EXCEPTION:Int;
	static public var OP_RETURN_VOID:Int;
	static public var OP_RETURN:Int;
	static public var OP_RETURN_WIDE:Int;
	static public var OP_RETURN_OBJECT:Int;
	static public var OP_CONST_4:Int;
	static public var OP_CONST_16:Int;
	static public var OP_CONST:Int;
	static public var OP_CONST_HIGH16:Int;
	static public var OP_CONST_WIDE_16:Int;
	static public var OP_CONST_WIDE_32:Int;
	static public var OP_CONST_WIDE:Int;
	static public var OP_CONST_WIDE_HIGH16:Int;
	static public var OP_CONST_STRING:Int;
	static public var OP_CONST_STRING_JUMBO:Int;
	static public var OP_CONST_CLASS:Int;
	static public var OP_MONITOR_ENTER:Int;
	static public var OP_MONITOR_EXIT:Int;
	static public var OP_CHECK_CAST:Int;
	static public var OP_INSTANCE_OF:Int;
	static public var OP_ARRAY_LENGTH:Int;
	static public var OP_NEW_INSTANCE:Int;
	static public var OP_NEW_ARRAY:Int;
	static public var OP_FILLED_NEW_ARRAY:Int;
	static public var OP_FILLED_NEW_ARRAY_RANGE:Int;
	static public var OP_FILL_ARRAY_DATA:Int;
	static public var OP_THROW:Int;
	static public var OP_GOTO:Int;
	static public var OP_GOTO_16:Int;
	static public var OP_GOTO_32:Int;
	static public var OP_PACKED_SWITCH:Int;
	static public var OP_SPARSE_SWITCH:Int;
	static public var OP_CMPL_FLOAT:Int;
	static public var OP_CMPG_FLOAT:Int;
	static public var OP_CMPL_DOUBLE:Int;
	static public var OP_CMPG_DOUBLE:Int;
	static public var OP_CMP_LONG:Int;
	static public var OP_IF_EQ:Int;
	static public var OP_IF_NE:Int;
	static public var OP_IF_LT:Int;
	static public var OP_IF_GE:Int;
	static public var OP_IF_GT:Int;
	static public var OP_IF_LE:Int;
	static public var OP_IF_EQZ:Int;
	static public var OP_IF_NEZ:Int;
	static public var OP_IF_LTZ:Int;
	static public var OP_IF_GEZ:Int;
	static public var OP_IF_GTZ:Int;
	static public var OP_IF_LEZ:Int;
	static public var OP_AGET:Int;
	static public var OP_AGET_WIDE:Int;
	static public var OP_AGET_OBJECT:Int;
	static public var OP_AGET_BOOLEAN:Int;
	static public var OP_AGET_BYTE:Int;
	static public var OP_AGET_CHAR:Int;
	static public var OP_AGET_SHORT:Int;
	static public var OP_APUT:Int;
	static public var OP_APUT_WIDE:Int;
	static public var OP_APUT_OBJECT:Int;
	static public var OP_APUT_BOOLEAN:Int;
	static public var OP_APUT_BYTE:Int;
	static public var OP_APUT_CHAR:Int;
	static public var OP_APUT_SHORT:Int;
	static public var OP_IGET:Int;
	static public var OP_IGET_WIDE:Int;
	static public var OP_IGET_OBJECT:Int;
	static public var OP_IGET_BOOLEAN:Int;
	static public var OP_IGET_BYTE:Int;
	static public var OP_IGET_CHAR:Int;
	static public var OP_IGET_SHORT:Int;
	static public var OP_IPUT:Int;
	static public var OP_IPUT_WIDE:Int;
	static public var OP_IPUT_OBJECT:Int;
	static public var OP_IPUT_BOOLEAN:Int;
	static public var OP_IPUT_BYTE:Int;
	static public var OP_IPUT_CHAR:Int;
	static public var OP_IPUT_SHORT:Int;
	static public var OP_SGET:Int;
	static public var OP_SGET_WIDE:Int;
	static public var OP_SGET_OBJECT:Int;
	static public var OP_SGET_BOOLEAN:Int;
	static public var OP_SGET_BYTE:Int;
	static public var OP_SGET_CHAR:Int;
	static public var OP_SGET_SHORT:Int;
	static public var OP_SPUT:Int;
	static public var OP_SPUT_WIDE:Int;
	static public var OP_SPUT_OBJECT:Int;
	static public var OP_SPUT_BOOLEAN:Int;
	static public var OP_SPUT_BYTE:Int;
	static public var OP_SPUT_CHAR:Int;
	static public var OP_SPUT_SHORT:Int;
	static public var OP_INVOKE_VIRTUAL:Int;
	static public var OP_INVOKE_SUPER:Int;
	static public var OP_INVOKE_DIRECT:Int;
	static public var OP_INVOKE_STATIC:Int;
	static public var OP_INVOKE_INTERFACE:Int;
	static public var OP_INVOKE_VIRTUAL_RANGE:Int;
	static public var OP_INVOKE_SUPER_RANGE:Int;
	static public var OP_INVOKE_DIRECT_RANGE:Int;
	static public var OP_INVOKE_STATIC_RANGE:Int;
	static public var OP_INVOKE_INTERFACE_RANGE:Int;
	static public var OP_NEG_INT:Int;
	static public var OP_NOT_INT:Int;
	static public var OP_NEG_LONG:Int;
	static public var OP_NOT_LONG:Int;
	static public var OP_NEG_FLOAT:Int;
	static public var OP_NEG_DOUBLE:Int;
	static public var OP_INT_TO_LONG:Int;
	static public var OP_INT_TO_FLOAT:Int;
	static public var OP_INT_TO_DOUBLE:Int;
	static public var OP_LONG_TO_INT:Int;
	static public var OP_LONG_TO_FLOAT:Int;
	static public var OP_LONG_TO_DOUBLE:Int;
	static public var OP_FLOAT_TO_INT:Int;
	static public var OP_FLOAT_TO_LONG:Int;
	static public var OP_FLOAT_TO_DOUBLE:Int;
	static public var OP_DOUBLE_TO_INT:Int;
	static public var OP_DOUBLE_TO_LONG:Int;
	static public var OP_DOUBLE_TO_FLOAT:Int;
	static public var OP_INT_TO_BYTE:Int;
	static public var OP_INT_TO_CHAR:Int;
	static public var OP_INT_TO_SHORT:Int;
	static public var OP_ADD_INT:Int;
	static public var OP_SUB_INT:Int;
	static public var OP_MUL_INT:Int;
	static public var OP_DIV_INT:Int;
	static public var OP_REM_INT:Int;
	static public var OP_AND_INT:Int;
	static public var OP_OR_INT:Int;
	static public var OP_XOR_INT:Int;
	static public var OP_SHL_INT:Int;
	static public var OP_SHR_INT:Int;
	static public var OP_USHR_INT:Int;
	static public var OP_ADD_LONG:Int;
	static public var OP_SUB_LONG:Int;
	static public var OP_MUL_LONG:Int;
	static public var OP_DIV_LONG:Int;
	static public var OP_REM_LONG:Int;
	static public var OP_AND_LONG:Int;
	static public var OP_OR_LONG:Int;
	static public var OP_XOR_LONG:Int;
	static public var OP_SHL_LONG:Int;
	static public var OP_SHR_LONG:Int;
	static public var OP_USHR_LONG:Int;
	static public var OP_ADD_FLOAT:Int;
	static public var OP_SUB_FLOAT:Int;
	static public var OP_MUL_FLOAT:Int;
	static public var OP_DIV_FLOAT:Int;
	static public var OP_REM_FLOAT:Int;
	static public var OP_ADD_DOUBLE:Int;
	static public var OP_SUB_DOUBLE:Int;
	static public var OP_MUL_DOUBLE:Int;
	static public var OP_DIV_DOUBLE:Int;
	static public var OP_REM_DOUBLE:Int;
	static public var OP_ADD_INT_2ADDR:Int;
	static public var OP_SUB_INT_2ADDR:Int;
	static public var OP_MUL_INT_2ADDR:Int;
	static public var OP_DIV_INT_2ADDR:Int;
	static public var OP_REM_INT_2ADDR:Int;
	static public var OP_AND_INT_2ADDR:Int;
	static public var OP_OR_INT_2ADDR:Int;
	static public var OP_XOR_INT_2ADDR:Int;
	static public var OP_SHL_INT_2ADDR:Int;
	static public var OP_SHR_INT_2ADDR:Int;
	static public var OP_USHR_INT_2ADDR:Int;
	static public var OP_ADD_LONG_2ADDR:Int;
	static public var OP_SUB_LONG_2ADDR:Int;
	static public var OP_MUL_LONG_2ADDR:Int;
	static public var OP_DIV_LONG_2ADDR:Int;
	static public var OP_REM_LONG_2ADDR:Int;
	static public var OP_AND_LONG_2ADDR:Int;
	static public var OP_OR_LONG_2ADDR:Int;
	static public var OP_XOR_LONG_2ADDR:Int;
	static public var OP_SHL_LONG_2ADDR:Int;
	static public var OP_SHR_LONG_2ADDR:Int;
	static public var OP_USHR_LONG_2ADDR:Int;
	static public var OP_ADD_FLOAT_2ADDR:Int;
	static public var OP_SUB_FLOAT_2ADDR:Int;
	static public var OP_MUL_FLOAT_2ADDR:Int;
	static public var OP_DIV_FLOAT_2ADDR:Int;
	static public var OP_REM_FLOAT_2ADDR:Int;
	static public var OP_ADD_DOUBLE_2ADDR:Int;
	static public var OP_SUB_DOUBLE_2ADDR:Int;
	static public var OP_MUL_DOUBLE_2ADDR:Int;
	static public var OP_DIV_DOUBLE_2ADDR:Int;
	static public var OP_REM_DOUBLE_2ADDR:Int;
	static public var OP_ADD_INT_LIT16:Int;
	static public var OP_RSUB_INT:Int;
	static public var OP_MUL_INT_LIT16:Int;
	static public var OP_DIV_INT_LIT16:Int;
	static public var OP_REM_INT_LIT16:Int;
	static public var OP_AND_INT_LIT16:Int;
	static public var OP_OR_INT_LIT16:Int;
	static public var OP_XOR_INT_LIT16:Int;
	static public var OP_ADD_INT_LIT8:Int;
	static public var OP_RSUB_INT_LIT8:Int;
	static public var OP_MUL_INT_LIT8:Int;
	static public var OP_DIV_INT_LIT8:Int;
	static public var OP_REM_INT_LIT8:Int;
	static public var OP_AND_INT_LIT8:Int;
	static public var OP_OR_INT_LIT8:Int;
	static public var OP_XOR_INT_LIT8:Int;
	static public var OP_SHL_INT_LIT8:Int;
	static public var OP_SHR_INT_LIT8:Int;
	static public var OP_USHR_INT_LIT8:Int;
	static public var OP_IGET_WIDE_VOLATILE:Int;
	static public var OP_IPUT_WIDE_VOLATILE:Int;
	static public var OP_SGET_WIDE_VOLATILE:Int;
	static public var OP_SPUT_WIDE_VOLATILE:Int;
	static public var OP_BREAKPOINT:Int;
	static public var OP_THROW_VERIFICATION_ERROR:Int;
	static public var OP_EXECUTE_INLINE:Int;
	static public var OP_EXECUTE_INLINE_RANGE:Int;
	static public var OP_INVOKE_DIRECT_EMPTY:Int;
	static public var OP_IGET_QUICK:Int;
	static public var OP_IGET_WIDE_QUICK:Int;
	static public var OP_IGET_OBJECT_QUICK:Int;
	static public var OP_IPUT_QUICK:Int;
	static public var OP_IPUT_WIDE_QUICK:Int;
	static public var OP_IPUT_OBJECT_QUICK:Int;
	static public var OP_INVOKE_VIRTUAL_QUICK:Int;
	static public var OP_INVOKE_VIRTUAL_QUICK_RANGE:Int;
	static public var OP_INVOKE_SUPER_QUICK:Int;
	static public var OP_INVOKE_SUPER_QUICK_RANGE:Int;


}